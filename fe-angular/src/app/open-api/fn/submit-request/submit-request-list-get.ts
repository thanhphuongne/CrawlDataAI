/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';


export interface SubmitRequestListGet$Params {

/**
 * The page number to retrieve
 */
  pagenumber?: number;

/**
 * The number of items per page
 */
  pagesize?: number;
}

export function submitRequestListGet(http: HttpClient, rootUrl: string, params?: SubmitRequestListGet$Params, context?: HttpContext): Observable<StrictHttpResponse<{

/**
 * The current page number
 */
'pageNumber'?: number;

/**
 * The number of items per page
 */
'pageSize'?: number;

/**
 * The total number of items
 */
'totalItems'?: number;

/**
 * The total number of pages
 */
'totalPages'?: number;
'data'?: Array<{
'id'?: number;
'accountName'?: string;
'descriptions'?: string;
'supervisor'?: number;
'categoryId'?: number;
'hasNotifyMail'?: boolean;
'suppervisorApproved'?: boolean;
'approverApproved'?: boolean;
'status'?: string;
'createBy'?: number;
}>;
}>> {
  const rb = new RequestBuilder(rootUrl, submitRequestListGet.PATH, 'get');
  if (params) {
    rb.query('pagenumber', params.pagenumber, {});
    rb.query('pagesize', params.pagesize, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<{
      
      /**
       * The current page number
       */
      'pageNumber'?: number;
      
      /**
       * The number of items per page
       */
      'pageSize'?: number;
      
      /**
       * The total number of items
       */
      'totalItems'?: number;
      
      /**
       * The total number of pages
       */
      'totalPages'?: number;
      'data'?: Array<{
      'id'?: number;
      'accountName'?: string;
      'descriptions'?: string;
      'supervisor'?: number;
      'categoryId'?: number;
      'hasNotifyMail'?: boolean;
      'suppervisorApproved'?: boolean;
      'approverApproved'?: boolean;
      'status'?: string;
      'createBy'?: number;
      }>;
      }>;
    })
  );
}

submitRequestListGet.PATH = '/submit-request/list';
