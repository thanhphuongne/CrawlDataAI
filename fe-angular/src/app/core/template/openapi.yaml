openapi: 3.0.1
info:
  title: DSS API Docs V1
  description: DSS API Docs V1
  version: 1.0.0
security:
- bearerAuth: []
tags: []
paths:
  /categories:
    get:
      tags:
      - Category
      summary: Get categories
      parameters:
      - name: pagenumber
        in: query
        description: The page number to retrieve
        schema:
          type: integer
          default: 1
      - name: pagesize
        in: query
        description: The number of items per page
        schema:
          type: integer
          default: 6
      responses:
        "200":
          description: The categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                example:
                  success: true
                  payload:
                    data: []
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
    post:
      tags:
      - Category
      summary: Create new category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                score:
                  type: integer
                type:
                  type: string
              example:
                name: Tham gia tạo Proposal dự án >2M
                description: Tham gia tạo Proposal dự án >2M
                score: 200
                type: bizdev
        required: false
      responses:
        "200":
          description: The category created
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
        "422":
          description: "Unprocessable Entity, the data is not valid"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - value: ""
                    msg: name is invalid
                    param: name
                    location: body
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
      x-codegen-request-body-name: body
  /type-categories:
    post:
      tags:
      - Category
      summary: Create new category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                approver:
                  type: string
              example:
                name: Tham gia tạo Proposal dự án >2M
                description: Tham gia tạo Proposal dự án >2M
                score: 200
                type: bizdev
        required: false
      responses:
        "200":
          description: The category created
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
        "422":
          description: "Unprocessable Entity, the data is not valid"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - value: ""
                    msg: name is invalid
                    param: name
                    location: body
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
      x-codegen-request-body-name: body
  /categories/{id}:
    put:
      tags:
      - Category
      summary: Update category
      parameters:
      - name: id
        in: path
        description: The ID of the category to retrieve
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                score:
                  type: integer
                type:
                  type: string
              example:
                name: Tham gia tạo Proposal dự án >2M
                description: Tham gia tạo Proposal dự án >2M
                score: 200
                type: bizdev
        required: false
      responses:
        "200":
          description: The category updated
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  msg: Success
        "422":
          description: "Unprocessable Entity, the data is not valid"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - value: ""
                    msg: Category id is required
                    param: id
                    location: param
                  - value: ""
                    msg: name is invalid
                    param: name
                    location: body
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
      x-codegen-request-body-name: body
  /submit-request:
    put:
      tags:
      - submitRequest
      summary: Update submit request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                accountName:
                  type: string
                descriptions:
                  type: string
                supervisor:
                  type: integer
                category:
                  type: integer
                hasNotifyMail:
                  type: boolean
              example:
                id: 1
                accountName: Join Smith
                descriptions: example@email.com
                supervisor: 1
                category: 1
                hasNotifyMail: true
        required: true
      responses:
        "200":
          description: The submit Request successfully
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  msg: Update success
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
      x-codegen-request-body-name: body
    post:
      tags:
      - submitRequest
      summary: Create submit request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accountName:
                  type: string
                descriptions:
                  type: string
                approver:
                  type: string
                supervisor:
                  type: integer
                category:
                  type: integer
                hasNotifyMail:
                  type: boolean
              example:
                accountName: Join Smith
                descriptions: example@email.com
                approver: tienpm3
                supervisor: 1
                category: 1
                hasNotifyMail: true
        required: true
      responses:
        "200":
          description: The submit Request successfully
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  payload:
                    suppervisorApproved: false
                    approverApproved: false
                    status: WAITING
                    id: 3
                    accountName: tienpm3
                    descriptions: params.descriptions
                    supervisor: 1
                    categoryId: 1
                    hasNotifyMail: true
                    createBy: 1
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
      x-codegen-request-body-name: body
  /submit-request/list:
    get:
      tags:
      - submitRequest
      summary: Get list submit request
      parameters:
      - name: pagenumber
        in: query
        description: The page number to retrieve
        schema:
          type: integer
          default: 1
      - name: pagesize
        in: query
        description: The number of items per page
        schema:
          type: integer
          default: 10
      responses:
        "200":
          description: The user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageNumber:
                    type: integer
                    description: The current page number
                  pageSize:
                    type: integer
                    description: The number of items per page
                  totalItems:
                    type: integer
                    description: The total number of items
                  totalPages:
                    type: integer
                    description: The total number of pages
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        accountName:
                          type: string
                        descriptions:
                          type: string
                        supervisor:
                          type: integer
                        categoryId:
                          type: integer
                        hasNotifyMail:
                          type: boolean
                        suppervisorApproved:
                          type: boolean
                        approverApproved:
                          type: boolean
                        status:
                          type: string
                        createBy:
                          type: integer
                example:
                  pageNumber: 1
                  pageSize: 10
                  totalItems: 6
                  totalPages: 1
                  data:
                  - id: 2
                    accountName: tienpm3
                    descriptions: params.descriptions
                    supervisor: 1
                    categoryId: 1
                    hasNotifyMail: true
                    suppervisorApproved: false
                    approverApproved: false
                    status: WAITING
                    createBy: 1
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
  /submit-request/ranking:
    get:
      tags:
      - submitRequest
      summary: Get ranking of submit requests
      parameters:
      - name: pagenumber
        in: query
        description: The page number to retrieve
        schema:
          type: integer
          default: 1
      - name: pagesize
        in: query
        description: The number of items per page
        schema:
          type: integer
          default: 6
      - name: startdate
        in: query
        description: The start date for filtering rankings (YYYY-MM-DD)
        required: true
        schema:
          type: string
          format: date
      - name: enddate
        in: query
        description: The end date for filtering rankings (YYYY-MM-DD)
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: The ranking data
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageNumber:
                    type: integer
                    description: The current page number
                  pageSize:
                    type: integer
                    description: The number of items per page
                  totalItems:
                    type: integer
                    description: The total number of items
                  totalPages:
                    type: integer
                    description: The total number of pages
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        accountName:
                          type: string
                          description: The account name of the user
                        totalScore:
                          type: string
                          description: The total score of the user
                        rank:
                          type: integer
                          description: The rank of the user
                example:
                  pageNumber: 1
                  pageSize: 6
                  totalItems: 1
                  totalPages: 1
                  data:
                  - accountName: tienpm3
                    totalScore: "800"
                    rank: 1
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
  /submit-request/supervisor-approve:
    post:
      tags:
      - submitRequest
      summary: approve submit request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                approve:
                  type: boolean
                descriptions:
                  type: string
              example:
                id: 1
                approve: true
                descriptions: 'chi tiết là gì '
        required: true
      responses:
        "200":
          description: The submit Request successfully
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  msg: Success
        "401":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
      x-codegen-request-body-name: body
  /submit-request/list-assign:
    get:
      tags:
      - submitRequest
      summary: Get ranking of submit requests
      parameters:
      - name: pagenumber
        in: query
        description: The page number to retrieve
        schema:
          type: integer
          default: 1
      - name: pagesize
        in: query
        description: The number of items per page
        schema:
          type: integer
          default: 6
      - name: status
        in: query
        description: WAITING/CONFIRM/REJECT
        schema:
          type: string
          default: "null"
      - name: type
        in: query
        description: BIZDEV
        schema:
          type: string
          default: "null"
      - name: approver
        in: query
        description: tienpm
        schema:
          type: string
          default: "null"
      - name: supervisor
        in: query
        description: tienpm
        schema:
          type: string
          default: "null"
      responses:
        "200":
          description: The fitter data
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageNumber:
                    type: integer
                    description: The current page number
                  pageSize:
                    type: integer
                    description: The number of items per page
                  totalItems:
                    type: integer
                    description: The total number of items
                  totalPages:
                    type: integer
                    description: The total number of pages
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        accountName:
                          type: string
                          description: The account name of the user
                        totalScore:
                          type: string
                          description: The total score of the user
                        rank:
                          type: integer
                          description: The rank of the user
                example:
                  pageNumber: 1
                  pageSize: 6
                  totalItems: 1
                  totalPages: 1
                  data:
                  - accountName: tienpm3
                    totalScore: "800"
                    rank: 1
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
  /submit-request/admin-approve:
    post:
      tags:
      - submitRequest
      summary: admin approve submit request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                approve:
                  type: boolean
                descriptions:
                  type: string
              example:
                id: 1
                approve: true
                descriptions: 'chi tiết là gì '
        required: true
      responses:
        "200":
          description: The submit Request successfully
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  msg: Success
        "401":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
      x-codegen-request-body-name: body
  /submit-request/approver-approve:
    post:
      tags:
      - submitRequest
      summary: admin approve submit request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                approve:
                  type: boolean
                descriptions:
                  type: string
              example:
                id: 1
                approve: true
                descriptions: 'chi tiết là gì '
        required: true
      responses:
        "200":
          description: The submit Request successfully
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  msg: Success
        "401":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
      x-codegen-request-body-name: body
  /submit-request/list-all:
    get:
      tags:
      - submitRequest
      summary: Get ranking of submit requests
      parameters:
      - name: pagenumber
        in: query
        description: The page number to retrieve
        schema:
          type: integer
          default: 1
      - name: pagesize
        in: query
        description: The number of items per page
        schema:
          type: integer
          default: 6
      - name: status
        in: query
        description: WAITING/CONFIRM/REJECT
        schema:
          type: string
          default: "null"
      - name: type
        in: query
        description: BIZDEV
        schema:
          type: string
          default: "null"
      - name: approver
        in: query
        description: tienpm
        schema:
          type: string
          default: "null"
      - name: supervisor
        in: query
        description: tienpm
        schema:
          type: string
          default: "null"
      responses:
        "200":
          description: The fitter data
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageNumber:
                    type: integer
                    description: The current page number
                  pageSize:
                    type: integer
                    description: The number of items per page
                  totalItems:
                    type: integer
                    description: The total number of items
                  totalPages:
                    type: integer
                    description: The total number of pages
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        accountName:
                          type: string
                          description: The account name of the user
                        totalScore:
                          type: string
                          description: The total score of the user
                        rank:
                          type: integer
                          description: The rank of the user
                example:
                  pageNumber: 1
                  pageSize: 6
                  totalItems: 1
                  totalPages: 1
                  data:
                  - accountName: tienpm3
                    totalScore: "800"
                    rank: 1
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
  /submit-request/list-approver:
    get:
      tags:
      - submitRequest
      summary: Get list-approver of submit requests
      parameters:
      - name: pagenumber
        in: query
        description: The page number to retrieve
        schema:
          type: integer
          default: 1
      - name: pagesize
        in: query
        description: The number of items per page
        schema:
          type: integer
          default: 6
      - name: status
        in: query
        description: WAITING/CONFIRM/REJECT
        schema:
          type: string
          default: "null"
      - name: type
        in: query
        description: BIZDEV
        schema:
          type: string
          default: "null"
      - name: approver
        in: query
        description: tienpm
        schema:
          type: string
          default: "null"
      - name: supervisor
        in: query
        description: tienpm
        schema:
          type: string
          default: "null"
      responses:
        "200":
          description: The fitter data
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageNumber:
                    type: integer
                    description: The current page number
                  pageSize:
                    type: integer
                    description: The number of items per page
                  totalItems:
                    type: integer
                    description: The total number of items
                  totalPages:
                    type: integer
                    description: The total number of pages
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        accountName:
                          type: string
                          description: The account name of the user
                        totalScore:
                          type: string
                          description: The total score of the user
                        rank:
                          type: integer
                          description: The rank of the user
                example:
                  pageNumber: 1
                  pageSize: 6
                  totalItems: 1
                  totalPages: 1
                  data:
                  - accountName: tienpm3
                    totalScore: "800"
                    rank: 1
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
  /users/registry:
    post:
      tags:
      - User
      summary: Registry new user account with basic information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                firstName: Join Smith
                lastName: "03494343487"
                email: example@email.com
                password: superStOngPassword
        required: true
      responses:
        "200":
          description: The user account
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  user:
                    _id: "1"
                    lastName: Join Smith
                    email: example@email.com
                    firstName: "03494343487"
                    role: USER
        "403":
          description: When data cannot be process
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - msg: "Email already used, please try to login instead"
                    param: email
                    location: body
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
      x-codegen-request-body-name: body
  /users/login:
    post:
      tags:
      - User
      summary: Login to your account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accountName:
                  type: string
                password:
                  type: string
              example:
                accountName: example@fpt.com
                password: password
        required: true
      responses:
        "200":
          description: Your account info
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  payload:
                    $ref: '#/components/schemas/User'
                example:
                  success: true
                  accessToken: sdfhuksyhfgsiufysukfyks
                  user:
                    _id: 5bea5655d05143d8a576a5a9
                    fullName: Join Smith
                    email: example@email.com
                    avatar: uploads/11-7-2020/user-avatar/5bea5655d05143d8a576a5a9.png
                    role: user
                    token: JWT token
        "403":
          description: When data cannot be process
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - msg: The email address that you've entered doesn't match any account.
                    param: emailNotRegistered
                  - msg: Email or password is not correct
                    param: emailPassword
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
      x-codegen-request-body-name: body
  /users/me:
    get:
      tags:
      - User
      summary: Get user information
      responses:
        "200":
          description: The user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  payload:
                    type: object
                    properties:
                      avatar:
                        type: string
                        description: The user avatar
                      email:
                        type: string
                        description: The user email
                      fullName:
                        type: string
                        description: The user fullName
                      token:
                        type: string
                        description: The user token
                example:
                  success: true
                  payload:
                    _id: 5f092acdfd2938050e3d5ed5
                    avatar: uploads/user-avatar/5bea5655d05143d8a576a5d9/avatar.png
                    fullName: Join Smith
                    email: user@mail.com
                    token: abd.sd.wew
        "404":
          description: When the User not found
          content:
            application/json:
              schema:
                type: string
                example: User not found
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
  /users:
    get:
      tags:
      - User
      summary: Admin get all users
      parameters:
      - name: page
        in: query
        description: The page want to load
        schema:
          type: number
      - name: rowPerPage
        in: query
        description: The rowPerPage want to load
        schema:
          type: number
      - name: textSearch
        in: query
        description: The textSearch(by email) want to load
        schema:
          type: string
      responses:
        "200":
          description: The users
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                example:
                  success: true
                  payload:
                    data: []
                    currentPage: 1
                    totalPage: 1
                    totalItems: 12
        "422":
          description: "Unprocessable Entity, the data is not valid"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - msg: Page number must be a positive integer
                    param: page
                  - msg: Row per page must be a positive integer not larger than 200
                    param: rowPerPage
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
    put:
      tags:
      - User
      summary: Update user profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                identityCardFront:
                  type: string
                  description: "The user identity card front face, upload type jpg|jpeg|png"
                  format: binary
                identityCardBack:
                  type: string
                  description: "The user identity card back face, upload type jpg|jpeg|png"
                  format: binary
                avatar:
                  type: string
                  description: "The user avatar, upload type jpg|jpeg|png"
                  format: binary
                cover:
                  type: string
                  description: "The user cover, upload type jpg|jpeg|png"
                  format: binary
                data:
                  type: string
                  description: The body stringify information
                  default: "{\"fullName\": \"David Hall\", \"email\": \"email@domain.com\"\
                    , \"phone\": \"054888383223\"}"
      responses:
        "200":
          description: The user profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "304":
          description: Not Modified
          content: {}
        "403":
          description: When data cannot be process
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - msg: "User avatar file is invalid, only image files are allowed!"
                    param: userAvatarInvalid
                    location: body
                  - msg: Email is not available
                    param: emailNotAvailable
                    location: body
        "422":
          description: "Unprocessable Entity, the data is not valid"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - value: mail@mail
                    msg: User email is invalid
                    param: email
                    location: body
        "500":
          description: When got server exception
          content: {}
  /users/password:
    put:
      tags:
      - User
      summary: Update user password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
              example:
                oldPassword: superStOngPassword
                newPassword: superStOngPassword2
        required: true
      responses:
        "200":
          description: Update password success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                example:
                  success: true
        "403":
          description: When data cannot be process
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - msg: New password must be difference with current password
                    param: passwordNotChanged
                  - msg: Password is not correct
                    param: passwordIncorrect
        "422":
          description: "Unprocessable Entity, the data is not valid"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - value: "123"
                    msg: Old password must be at least 8 chars long
                    param: oldPassword
                    location: body
                  - value: abd
                    msg: New password must be at least 8 chars long
                    param: newPassword
                    location: body
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
      x-codegen-request-body-name: body
  /users/forgot-password:
    post:
      tags:
      - User
      summary: Reset user password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              example:
                email: example@email.com
        required: true
      responses:
        "200":
          description: Send the forgot password email success
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  payload: "If your email is correctly, we have sent you a forgot\
                    \ password email, please check your inbox"
        "403":
          description: When data cannot be process
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - msg: "Your account is not available, had been rejected or deactivated"
                    param: accountNotAvailable
        "422":
          description: "Unprocessable Entity, the data is not valid"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - value: mail mail
                    msg: must be an email
                    param: email
                    location: body
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
      x-codegen-request-body-name: body
  /users/forgot-password/verify:
    post:
      tags:
      - User
      summary: Verify user forgot password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
              example:
                newPassword: superStOngPassword2
        required: true
      responses:
        "200":
          description: "Password update success, please login to your account with\
            \ new password"
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  payload: "Password update success, please login with new password"
        "403":
          description: When data cannot be process
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - msg: You have no forgot password request
                    param: noForgotPasswordRequest
                  - msg: "Your verification code is expired, please request new one"
                    param: verificationCodeExpired
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
      x-codegen-request-body-name: body
  /users/list-supervisors:
    get:
      tags:
      - User
      summary: get all users suppervisor
      parameters:
      - name: page
        in: query
        description: The page want to load
        schema:
          type: number
      - name: rowPerPage
        in: query
        description: The rowPerPage want to load
        schema:
          type: number
      - name: textSearch
        in: query
        description: The textSearch(by email) want to load
        schema:
          type: string
      responses:
        "200":
          description: The users
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                example:
                  success: true
                  payload:
                    data: []
                    currentPage: 1
                    totalPage: 1
                    totalItems: 12
        "422":
          description: "Unprocessable Entity, the data is not valid"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidatorErrorItem'
                example:
                  success: false
                  errors:
                  - msg: Page number must be a positive integer
                    param: page
                  - msg: Row per page must be a positive integer not larger than 200
                    param: rowPerPage
        "500":
          description: When got server exception
          content:
            application/json:
              schema:
                type: string
                example: Internal server error
components:
  schemas:
    ValidatorErrorItem:
      type: object
      properties:
        value:
          type: string
          description: The value got on request
        msg:
          type: string
          description: The error message
        param:
          type: string
          description: The key of value
        location:
          type: string
          description: The location of value
    ValidatorError:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidatorErrorItem'
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user
        firstName:
          type: string
          description: first Name of the user
        lastName:
          type: string
          description: last Name of the user
        email:
          type: string
          description: Email address of the user
    Category:
      type: object
      properties:
        name:
          type: string
          description: The name of the category
        description:
          type: string
          description: A short description of the category
        score:
          type: number
          description: The score associated with the category
          format: float
        type:
          type: string
          description: The type of the category
  securitySchemes:
    bearerAuth:
      type: apiKey
      description: "Enter your Bearer token in the format: Bearer <token>"
      name: Authorization
      in: header
