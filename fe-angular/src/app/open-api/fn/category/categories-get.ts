/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { Category } from '../../models/category';

export interface CategoriesGet$Params {

/**
 * The page number to retrieve
 */
  pagenumber?: number;

/**
 * The number of items per page
 */
  pagesize?: number;
}

export function categoriesGet(http: HttpClient, rootUrl: string, params?: CategoriesGet$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'success'?: boolean;
'payload'?: Array<Category>;
}>> {
  const rb = new RequestBuilder(rootUrl, categoriesGet.PATH, 'get');
  if (params) {
    rb.query('pagenumber', params.pagenumber, {});
    rb.query('pagesize', params.pagesize, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<{
      'success'?: boolean;
      'payload'?: Array<Category>;
      }>;
    })
  );
}

categoriesGet.PATH = '/categories';
