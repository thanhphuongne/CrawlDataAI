/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { User } from '../../models/user';

export interface UsersListSupervisorsGet$Params {

/**
 * The page want to load
 */
  page?: number;

/**
 * The rowPerPage want to load
 */
  rowPerPage?: number;

/**
 * The textSearch(by email) want to load
 */
  textSearch?: string;
}

export function usersListSupervisorsGet(http: HttpClient, rootUrl: string, params?: UsersListSupervisorsGet$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'success'?: boolean;
'payload'?: Array<User>;
}>> {
  const rb = new RequestBuilder(rootUrl, usersListSupervisorsGet.PATH, 'get');
  if (params) {
    rb.query('page', params.page, {});
    rb.query('rowPerPage', params.rowPerPage, {});
    rb.query('textSearch', params.textSearch, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<{
      'success'?: boolean;
      'payload'?: Array<User>;
      }>;
    })
  );
}

usersListSupervisorsGet.PATH = '/users/list-supervisors';
